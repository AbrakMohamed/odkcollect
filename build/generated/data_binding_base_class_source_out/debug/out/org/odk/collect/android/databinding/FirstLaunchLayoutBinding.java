// Generated by view binder compiler. Do not edit!
package org.odk.collect.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.Barrier;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.odk.collect.android.R;
import org.odk.collect.androidshared.ui.multiclicksafe.MultiClickSafeMaterialButton;

public final class FirstLaunchLayoutBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView appName;

  @NonNull
  public final Barrier barrierEnd;

  @NonNull
  public final ConstraintLayout center;

  @NonNull
  public final MultiClickSafeMaterialButton configureManuallyButton;

  @NonNull
  public final MultiClickSafeMaterialButton configureViaQrButton;

  @NonNull
  public final TextView dontHaveServer;

  @NonNull
  public final ImageView logo;

  @NonNull
  public final TextView tagline;

  private FirstLaunchLayoutBinding(@NonNull ScrollView rootView, @NonNull TextView appName,
      @NonNull Barrier barrierEnd, @NonNull ConstraintLayout center,
      @NonNull MultiClickSafeMaterialButton configureManuallyButton,
      @NonNull MultiClickSafeMaterialButton configureViaQrButton, @NonNull TextView dontHaveServer,
      @NonNull ImageView logo, @NonNull TextView tagline) {
    this.rootView = rootView;
    this.appName = appName;
    this.barrierEnd = barrierEnd;
    this.center = center;
    this.configureManuallyButton = configureManuallyButton;
    this.configureViaQrButton = configureViaQrButton;
    this.dontHaveServer = dontHaveServer;
    this.logo = logo;
    this.tagline = tagline;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FirstLaunchLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FirstLaunchLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.first_launch_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FirstLaunchLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_name;
      TextView appName = ViewBindings.findChildViewById(rootView, id);
      if (appName == null) {
        break missingId;
      }

      id = R.id.barrierEnd;
      Barrier barrierEnd = ViewBindings.findChildViewById(rootView, id);
      if (barrierEnd == null) {
        break missingId;
      }

      id = R.id.center;
      ConstraintLayout center = ViewBindings.findChildViewById(rootView, id);
      if (center == null) {
        break missingId;
      }

      id = R.id.configure_manually_button;
      MultiClickSafeMaterialButton configureManuallyButton = ViewBindings.findChildViewById(rootView, id);
      if (configureManuallyButton == null) {
        break missingId;
      }

      id = R.id.configure_via_qr_button;
      MultiClickSafeMaterialButton configureViaQrButton = ViewBindings.findChildViewById(rootView, id);
      if (configureViaQrButton == null) {
        break missingId;
      }

      id = R.id.dont_have_server;
      TextView dontHaveServer = ViewBindings.findChildViewById(rootView, id);
      if (dontHaveServer == null) {
        break missingId;
      }

      id = R.id.logo;
      ImageView logo = ViewBindings.findChildViewById(rootView, id);
      if (logo == null) {
        break missingId;
      }

      id = R.id.tagline;
      TextView tagline = ViewBindings.findChildViewById(rootView, id);
      if (tagline == null) {
        break missingId;
      }

      return new FirstLaunchLayoutBinding((ScrollView) rootView, appName, barrierEnd, center,
          configureManuallyButton, configureViaQrButton, dontHaveServer, logo, tagline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
